{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ImageService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://picsum.photos/v2/List';\n  }\n  getImages(limit = 10) {\n    return this.http.get(`${this.apiUrl}?limit=${limit}`);\n  }\n  getImageDetails(id) {\n    return this.http.get('https://picsum.photos/id/${id}/info');\n  }\n  static {\n    this.ɵfac = function ImageService_Factory(t) {\n      return new (t || ImageService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ImageService,\n      factory: ImageService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["ImageService","constructor","http","apiUrl","getImages","limit","get","getImageDetails","id","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\henry\\Downloads\\clase-prueba\\src\\app\\services\\image.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n private apiUrl: string = 'https://picsum.photos/v2/List';\n  constructor(private http:HttpClient) { }\n\n  getImages(limit:number = 10): Observable<any> {\n    return this.http.get<any>(`${this.apiUrl}?limit=${limit}`);\n  }\n  getImageDetails(id: string): Observable<any> {\n    return this.http.get<any>('https://picsum.photos/id/${id}/info');\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,YAAY;EAEvBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IADjB,KAAAC,MAAM,GAAW,+BAA+B;EAChB;EAEvCC,SAASA,CAACC,KAAA,GAAe,EAAE;IACzB,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAM,GAAG,IAAI,CAACH,MAAM,UAAUE,KAAK,EAAE,CAAC;EAC5D;EACAE,eAAeA,CAACC,EAAU;IACxB,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAM,qCAAqC,CAAC;EAClE;;;uBATWN,YAAY,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAZZ,YAAY;MAAAa,OAAA,EAAZb,YAAY,CAAAc,IAAA;MAAAC,UAAA,EAFX;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}